name: 👑 The Ascension (Release)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.2.3)'
        required: true
        type: string

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  the-preparation:
    name: 🛡️ Prepare for Ascension
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      prerelease: ${{ steps.version.outputs.prerelease }}
    steps:
      - name: Unsheathe the Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Determine the Version
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${{ github.ref_name }}"
          fi
          
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          
          if [[ "$VERSION" == *"-"* ]]; then
            echo "prerelease=true" >> $GITHUB_OUTPUT
          else
            echo "prerelease=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Chronicle the Journey
        run: |
          echo "## 📜 The Chronicles of ${{ steps.version.outputs.version }}"
          git log --pretty=format:"- %s (%an)" $(git describe --tags --abbrev=0 HEAD^)..HEAD

  the-forging:
    name: 🔨 Forge the Artifacts
    needs: the-preparation
    strategy:
      matrix:
        platform:
          - linux-amd64
          - linux-arm64
          - darwin-amd64
          - darwin-arm64
          - windows-amd64
    runs-on: ubuntu-latest
    steps:
      - name: Unsheathe the Code
        uses: actions/checkout@v4
        
      - name: Prepare the Forge
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          
      - name: Gather Materials
        run: npm ci
        
      - name: Forge for ${{ matrix.platform }}
        run: |
          npm run build:${{ matrix.platform }}
          tar -czf ${{ matrix.platform }}.tar.gz dist/
          
      - name: Sign the Artifact
        run: |
          echo "Signing artifact with The Nash Group seal..."
          # Add actual signing logic here
          
      - name: Preserve the Artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ matrix.platform }}
          path: ${{ matrix.platform }}.tar.gz

  the-containerization:
    name: 🏺 Seal in the Sacred Vessel
    needs: the-preparation
    runs-on: ubuntu-latest
    steps:
      - name: Unsheathe the Code
        uses: actions/checkout@v4
        
      - name: Prepare Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Authenticate with the Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Forge Container Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}
            
      - name: Seal the Application
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  the-chronicles:
    name: 📜 Update The Chronicles
    needs: [the-preparation, the-forging]
    runs-on: ubuntu-latest
    steps:
      - name: Unsheathe the Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Gather the Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
          
      - name: Generate the Changelog
        id: changelog
        run: |
          {
            echo "# Release ${{ needs.the-preparation.outputs.version }}"
            echo ""
            echo "## 🎯 What's Changed"
            git log --pretty=format:"- %s (%an)" $(git describe --tags --abbrev=0 HEAD^)..HEAD
            echo ""
            echo "## 📊 Statistics"
            echo "- Commits: $(git rev-list --count $(git describe --tags --abbrev=0 HEAD^)..HEAD)"
            echo "- Contributors: $(git log --format='%an' $(git describe --tags --abbrev=0 HEAD^)..HEAD | sort -u | wc -l)"
            echo "- Files Changed: $(git diff --stat $(git describe --tags --abbrev=0 HEAD^)..HEAD | tail -1)"
            echo ""
            echo "## 🏺 Artifacts"
            echo "The following artifacts have been forged for this release:"
            ls -la artifacts/*/
          } > RELEASE_NOTES.md
          
      - name: Calculate Checksums
        run: |
          cd artifacts
          for file in */*.tar.gz; do
            sha256sum "$file" >> checksums.txt
          done
          
      - name: Create the Release
        uses: softprops/action-gh-release@v1
        with:
          name: "${{ needs.the-preparation.outputs.version }} - $(date +'%B %d, %Y')"
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: ${{ needs.the-preparation.outputs.prerelease }}
          files: |
            artifacts/*/*.tar.gz
            artifacts/checksums.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  the-announcement:
    name: 📯 Herald the Ascension
    needs: [the-preparation, the-chronicles]
    runs-on: ubuntu-latest
    steps:
      - name: Announce to the Immortals
        run: |
          echo "🎉 Version ${{ needs.the-preparation.outputs.version }} has ascended!"
          echo "The Nash Group grows stronger."
          
      - name: Update Status Page
        run: |
          echo "Updating status page with new version..."
          # Add actual status page update logic
          
      - name: Notify the Watchers
        run: |
          echo "Sending notifications to monitoring systems..."
          # Add monitoring system notifications

  the-validation:
    name: ✅ Validate the Ascension
    needs: [the-containerization, the-chronicles]
    runs-on: ubuntu-latest
    steps:
      - name: Test the Container
        run: |
          docker run --rm ghcr.io/${{ github.repository }}:${{ needs.the-preparation.outputs.version }} --version
          
      - name: Verify the Chronicles
        run: |
          echo "Verifying release notes and artifacts..."
          
      - name: Final Blessing
        run: |
          echo "## 👑 The Ascension is Complete"
          echo "Version ${{ needs.the-preparation.outputs.version }} now reigns."
          echo ""
          echo "*There can be only one... release at a time.*"